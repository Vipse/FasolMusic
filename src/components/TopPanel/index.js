import React from 'react';
import PropTypes from 'prop-types'
import moment from 'moment'

import TopPanelItem from '../TopPanelItem';
import './style.css'
import '../../icon/style.css'
import Button from '../Button';

const studentText = '–ü—Ä–æ–≤–æ–¥–∏—Ç–µ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è —Å –ø–æ–ª—å–∑–æ–π, ' +
    '–æ—Ç—Ç–∞—á–∏–≤–∞–π—Ç–µ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ –Ω–∞ YouTube ' +
    '–Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —É–∂–µ –±–æ–ª–µ–µ 28.000 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤, ' +
    '–∑–¥–µ—Å—å –≤—ã –Ω–∞–π–¥—ë—Ç–µ –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ!';
const coachText = '–ù–µ—Ç –ø—Ä–µ–¥–µ–ª–∞ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É! ' +
    '–ó–∞—Ö–æ–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –Ω–∞ YouTube, —É–≤–µ—Ä–µ–Ω, ' +
    '–≤—ã –Ω–∞–π–¥—ë—Ç–µ –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, ' +
    '–∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –µ—â–µ –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º–∏! ' +
    '–ò–ª–∏ –º–æ–∂–µ—Ç –≤—ã —Å–æ–∑—Ä–µ–ª–∏ –¥–ª—è —Å–≤–æ–µ–≥–æ –±–ª–æ–≥–∞?! üí™';

class TopPanel extends React.Component{
    state = {
        time: moment(),
    };

    componentDidMount(){
        this.tick();
        this.timeout = setTimeout(this.firstTick,(60-moment().second())*1000);
    }

    componentWillUnmount(){
        clearTimeout(this.timeout);
        clearInterval(this.timer);
    }

    firstTick = () => {
        this.tick();
        this.timer = setInterval(this.tick, 60000);
    };

    tick = () => {
        this.setState({time: moment()});
    };

    render(){
        const {time} = this.state;
        const {myCoachOrStudents, nextTrainingTime, todayTraining, isStudent} = this.props;

        let lenghtToday = 0;
        for (let el in todayTraining) {
            if(todayTraining.hasOwnProperty(el) && Array.isArray(todayTraining[el]) ) {
                lenghtToday += todayTraining[el].length;
            }
        }

        return (
            <div className='top-panel'>
                <div className='top-panel-description'>
                    <h3 className='top-panel-description-title'>–ü–æ–∫–∞ –∂–¥–µ—Ç–µ –Ω–∞—á–∞–ª–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏,
                        –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à–µ –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ
                    </h3>
                    <p className='top-panel-description-body'>{isStudent ? studentText : coachText}
                    </p>
                    <a className='top-panel-description-link' target='_blank' href='https://www.youtube.com/channel/UC2CeLJuTUSqjQUrxctjttdg'>
                        <Button
                            btnText='–ü–µ—Ä–µ–π—Ç–∏ –∫ –≤–∏–¥–µ–æ'
                            size='large'
                            type='yellow-unfilled'
                        />
                    </a>
                </div>
                <div className="top-panel-items">
                    <TopPanelItem
                        panelTitle="–°–ª–µ–¥—É—é—â–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞"
                        panelText={ (nextTrainingTime) ? moment(nextTrainingTime).format('D MMM') : '-'}
                    />
                    <TopPanelItem
                        panelTitle="–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"
                        panelText={lenghtToday}
                    />
                    <TopPanelItem
                        panelTitle={isStudent ? "–ú–æ–∏ –∫–æ—É—á–∏" : '–ú–æ–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã'}
                        panelText={Array.isArray(myCoachOrStudents) ? myCoachOrStudents.filter((el) => (el) ? true : false).length : '-'} // –≤ –º–∞—Å—Å–∏–≤–µ –±—ã–≤–∞—é—Ç null
                    />
                </div>
            </div>
        )
    }
}

TopPanel.propTypes = {
    receptionsToday: PropTypes.number,
    receptionsActual: PropTypes.number,
    patients: PropTypes.number,
    nextTraining: PropTypes.number,
    nextTrainingTime: PropTypes.number,
};

TopPanel.defaultProps = {
    receptionsToday: 0,
    receptionsActual: 0,
    patients: 0,
    nextTraining: 0,
};


export default TopPanel
